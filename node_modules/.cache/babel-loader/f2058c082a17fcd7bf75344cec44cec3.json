{"ast":null,"code":"var _jsxFileName = \"/Users/jack/CodeProjects/eth-todo/src/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  componentWillMount() {\n    this.loadBlockchainData();\n  }\n\n  async loadBlockchainData() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:3000\");\n    const network = await web3.eth.net.getNetworkType();\n    console.log(\"network\", network);\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" greg willay \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"my acc: \", this.state.account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jack/CodeProjects/eth-todo/src/App.js"],"names":["React","Component","Web3","App","componentWillMount","loadBlockchainData","web3","givenProvider","network","eth","net","getNetworkType","console","log","accounts","getAccounts","setState","account","constructor","props","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA2B;AACzBG,EAAAA,kBAAkB,GAAE;AAClB,SAAKC,kBAAL;AACD;;AAGuB,QAAlBA,kBAAkB,GAAE;AACxB,UAAMC,IAAI,GAAG,IAAIJ,IAAJ,CAASA,IAAI,CAACK,aAAL,IAAsB,uBAA/B,CAAb;AACA,UAAMC,OAAO,GAAG,MAAMF,IAAI,CAACG,GAAL,CAASC,GAAT,CAAaC,cAAb,EAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBL,OAAvB;AACA,UAAMM,QAAQ,GAAG,MAAMR,IAAI,CAACG,GAAL,CAASM,WAAT,EAAvB;AACA,SAAKC,QAAL,CAAc;AAACC,MAAAA,OAAO,EAAEH,QAAQ,CAAC,CAAD;AAAlB,KAAd;AACD;;AAEDI,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACH,MAAAA,OAAO,EAAE;AAAV,KAAb;AACD;;AACDI,EAAAA,MAAM,GAAE;AACN,wBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,+BAAY,KAAKD,KAAL,CAAWH,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAOD;;AA1BwB;;AA6B3B,eAAed,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport Web3 from 'web3'\nimport './App.css'; \n\nclass App extends Component{\n  componentWillMount(){\n    this.loadBlockchainData()\n  }\n\n\n  async loadBlockchainData(){\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:3000\")\n    const network = await web3.eth.net.getNetworkType()\n    console.log(\"network\", network)\n    const accounts = await web3.eth.getAccounts()\n    this.setState({account: accounts[0]})\n  }\n\n  constructor(props){\n    super(props)\n    this.state = {account: ''}\n  }\n  render(){\n    return(\n    <div className=\"container\">\n      <h1> greg willay </h1>\n      <p>my acc: {this.state.account}</p>\n     \n    </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}